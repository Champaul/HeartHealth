<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.project.mapper.ScheduleMapper" >
  <resultMap id="BaseResultMap" type="cn.com.project.domain.Schedule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="zxrq" property="zxrq" jdbcType="VARCHAR" />
     <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="aid" property="aid" jdbcType="INTEGER" />
     <result column="jsnumber" property="jsnumber" jdbcType="VARCHAR" />
      <result column="chexing" property="chexing" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    s.id, s.title, s.content, s.zxrq, s.aid,a.account
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from schedule s
    left join admin a
    on s.aid = a.id
    where s.id = #{id,jdbcType=INTEGER}
  </select>
   <select id="select" resultMap="BaseResultMap" parameterType="cn.com.project.domain.Schedule" >
    select 
    s.id, s.title, s.content, s.zxrq, s.aid,a.account,a.jsnumber,a.chexing
     from schedule s
    left join admin a
    on s.aid = a.id
    <where>
           <if test="account !=null and account !=''">
             and a.account like CONCAT(CONCAT('%',#{account},'%'))
           </if>
           <if test="zxrq !=null and zxrq !=''">
             and a.zxrq like CONCAT(CONCAT('%',#{zxrq},'%'))
           </if>
            <if test="jsnumber !=null and jsnumber !=''">
             and a.jsnumber like CONCAT(CONCAT('%',#{jsnumber},'%'))
           </if>
            <if test="chexing !=null and chexing !=''">
             and a.chexing like CONCAT(CONCAT('%',#{chexing},'%'))
           </if>
      </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.project.domain.Schedule" >
    insert into schedule (id, title, content, 
      zxrq, aid)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{zxrq,jdbcType=VARCHAR}, #{aid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.project.domain.Schedule" >
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="zxrq != null" >
        zxrq,
      </if>
      <if test="aid != null" >
        aid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="zxrq != null" >
        #{zxrq,jdbcType=VARCHAR},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.project.domain.Schedule" >
    update schedule
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="zxrq != null" >
        zxrq = #{zxrq,jdbcType=VARCHAR},
      </if>
      <if test="aid != null" >
        aid = #{aid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.project.domain.Schedule" >
    update schedule
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      zxrq = #{zxrq,jdbcType=VARCHAR},
      aid = #{aid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>